[{"D:\\Javascript\\bootcamp\\chapter_9_react\\HW\\first-react-contact\\src\\index.js":"1","D:\\Javascript\\bootcamp\\chapter_9_react\\HW\\first-react-contact\\src\\App.js":"2","D:\\Javascript\\bootcamp\\chapter_9_react\\HW\\first-react-contact\\src\\context\\ContactBookProvider.jsx":"3","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\App.js":"4","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\editContact\\EditContact.jsx":"5","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\context\\ContactBookProvider.jsx":"6","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\contactsList\\ContactList.jsx":"7","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\addContact\\AddContact.jsx":"8","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\index.js":"9","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\Routes.js":"10","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\Details\\Details.jsx":"11","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\MainComponent\\MainComponent.jsx":"12","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\helpers\\History.js":"13"},{"size":290,"mtime":1606672923279,"results":"14","hashOfConfig":"15"},{"size":614,"mtime":1606727999959,"results":"16","hashOfConfig":"15"},{"size":2256,"mtime":1606740487351,"results":"17","hashOfConfig":"15"},{"size":153,"mtime":1606916652528,"results":"18","hashOfConfig":"19"},{"size":1787,"mtime":1606991478231,"results":"20","hashOfConfig":"19"},{"size":2905,"mtime":1606996408698,"results":"21","hashOfConfig":"19"},{"size":5783,"mtime":1607001871453,"results":"22","hashOfConfig":"19"},{"size":3826,"mtime":1607002098795,"results":"23","hashOfConfig":"19"},{"size":290,"mtime":1606672923279,"results":"24","hashOfConfig":"19"},{"size":553,"mtime":1606995948247,"results":"25","hashOfConfig":"19"},{"size":3227,"mtime":1606996304275,"results":"26","hashOfConfig":"19"},{"size":884,"mtime":1606986900276,"results":"27","hashOfConfig":"19"},{"size":95,"mtime":1606995643010,"results":"28","hashOfConfig":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14v7gxr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"adkqt3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Javascript\\bootcamp\\chapter_9_react\\HW\\first-react-contact\\src\\index.js",[],"D:\\Javascript\\bootcamp\\chapter_9_react\\HW\\first-react-contact\\src\\App.js",[],"D:\\Javascript\\bootcamp\\chapter_9_react\\HW\\first-react-contact\\src\\context\\ContactBookProvider.jsx",[],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\App.js",[],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\editContact\\EditContact.jsx",["59","60","61","62","63","64","65"],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\context\\ContactBookProvider.jsx",[],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\contactsList\\ContactList.jsx",["66","67"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nimport './ContactList.css';\r\nimport { contactBookContext } from '../../context/ContactBookProvider';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  contactList: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nconst ContactList = () => {\r\n  const {\r\n    contacts,\r\n    deleteContact,\r\n    editContactFunc,\r\n    editContact,\r\n    isEdit,\r\n    getContactsData,\r\n    getDetailsContact,\r\n    status,\r\n    saveContact,\r\n    cancelEdit,\r\n  } = useContext(contactBookContext);\r\n\r\n  const [editItem, setEditItem] = useState(editContact);\r\n\r\n  const [statusItem, setStatusItem] = useState(status);\r\n\r\n  useEffect(() => {\r\n    setEditItem(editContact);\r\n  }, [editContact]);\r\n\r\n  useEffect(() => {\r\n    setStatusItem(status);\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    getContactsData();\r\n  }, []);\r\n\r\n  function handleValue(e) {\r\n    let obj = {\r\n      ...editItem,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n\r\n    setEditItem(obj);\r\n  }\r\n\r\n  const handleEdit = (id) => {\r\n    editContactFunc(id);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    getContactsData();\r\n    cancelEdit();\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={5}>\r\n      {contacts.map((item, index) => (\r\n        <Grid item className=\"contactsItem\" key={'number-' + index}>\r\n          <Paper style={{ width: 282, height: 200 }}>\r\n            {!isEdit || (editItem && editItem.id !== item.id) ? (\r\n              <>\r\n                <Card className={classes.root}>\r\n                  <CardActionArea>\r\n                    <CardContent className={classes.contactList}>\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        defaultValue={item.name}\r\n                        focused={\r\n                          editItem && editItem.id === item.id\r\n                            ? !statusItem\r\n                            : null\r\n                        }\r\n                        InputProps={{\r\n                          readOnly: statusItem,\r\n                        }}\r\n                        onChange={handleValue}\r\n                      />\r\n                      <TextField\r\n                        label=\"Lastname\"\r\n                        name=\"lastName\"\r\n                        focused={\r\n                          editItem && editItem.id === item.id\r\n                            ? !statusItem\r\n                            : null\r\n                        }\r\n                        defaultValue={item.lastName}\r\n                        InputProps={{\r\n                          readOnly: statusItem,\r\n                        }}\r\n                        onChange={handleValue}\r\n                      />\r\n                      <TextField\r\n                        label=\"phone\"\r\n                        defaultValue={item.phone}\r\n                        name=\"phone\"\r\n                        focused={\r\n                          editItem && editItem.id === item.id\r\n                            ? !statusItem\r\n                            : null\r\n                        }\r\n                        InputProps={{\r\n                          readOnly: statusItem,\r\n                        }}\r\n                        onChange={handleValue}\r\n                      />\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  {statusItem || (editItem && editItem.id !== item.id) ? (\r\n                    <CardActions>\r\n                      <Link to=\"/details\">\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={() => getDetailsContact(item.id)}\r\n                        >\r\n                          Details\r\n                        </Button>\r\n                      </Link>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleEdit(item.id)}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        onClick={() => deleteContact(item.id)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </CardActions>\r\n                  ) : (\r\n                    <CardActions>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => saveContact(editItem)}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </CardActions>\r\n                  )}\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <CircularProgress color=\"secondary\" />\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n",["68","69"],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\addContact\\AddContact.jsx",[],["70","71"],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\index.js",[],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\Routes.js",[],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\Details\\Details.jsx",[],"D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\components\\MainComponent\\MainComponent.jsx",["72"],"import React from 'react';\r\nimport AddContact from '../addContact/AddContact';\r\nimport ContactList from '../contactsList/ContactList';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(5),\r\n      marginBottom: theme.spacing(5),\r\n    },\r\n  },\r\n}));\r\n\r\nconst MainComponent = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={false} sm={2} />\r\n        <Grid container item xs={12} sm={8}>\r\n          <Grid container item xs={12} className={classes.root}>\r\n            <AddContact />\r\n          </Grid>\r\n          <ContactList />\r\n        </Grid>\r\n        <Grid item xs={false} sm={2} />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","D:\\Javascript\\bootcamp\\Chapter_10_react\\Hw\\first-react-contact\\src\\helpers\\History.js",[],{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":27},{"ruleId":"73","severity":1,"message":"77","line":1,"column":29,"nodeType":"75","messageId":"76","endLine":1,"endColumn":38},{"ruleId":"73","severity":1,"message":"78","line":1,"column":40,"nodeType":"75","messageId":"76","endLine":1,"endColumn":48},{"ruleId":"73","severity":1,"message":"79","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":28},{"ruleId":"73","severity":1,"message":"80","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":24},{"ruleId":"73","severity":1,"message":"81","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":17},{"ruleId":"73","severity":1,"message":"82","line":8,"column":10,"nodeType":"75","messageId":"76","endLine":8,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":59,"column":6,"nodeType":"85","endLine":59,"endColumn":8,"suggestions":"86"},{"ruleId":"73","severity":1,"message":"87","line":74,"column":9,"nodeType":"75","messageId":"76","endLine":74,"endColumn":21},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"73","severity":1,"message":"94","line":4,"column":16,"nodeType":"75","messageId":"76","endLine":4,"endColumn":26},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'contactBookContext' is defined but never used.","'CircularProgress' is defined but never used.","'TextField' is defined but never used.","'TextFieldsSharp' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContactsData'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'handleCancel' is assigned a value but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"'Typography' is defined but never used.",{"desc":"98","fix":"99"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getContactsData]",{"range":"100","text":"101"},[1607,1609],"[getContactsData]"]